%YAML:1.0

# Project
project_name: "lvi_sam"

#common parameters
imu_topic: "/imu/imu_mod"
image_topic: "/right/image_raw"
point_cloud_topic: "lvi_sam/lidar/deskew/cloud_deskewed"

# Lidar Params
use_lidar: 1                     # whether use depth info from lidar or not
lidar_skip: 3                    # skip this amount of scans
align_camera_lidar_estimation: 1 # align camera and lidar estimation for visualization

# lidar to camera extrinsic
#camera原点，lidar系姿态下，lidar位姿  T : camera <-- lidar
lidar_to_cam_tx: -0.1019443
lidar_to_cam_ty: -0.1347802
lidar_to_cam_tz: 0.04034933
lidar_to_cam_rx: 0.0
lidar_to_cam_ry: -0.01
lidar_to_cam_rz: -0.02

#获取深度时，相机坐标系与lidar坐标系的变换, R: lidar <-- camera
depth_camera_to_lidar_Rotation: !!opencv-matrix
  rows: 3
  cols: 3
  dt: d
  data: [0, 0, 1,
         1, 0, 0,
         0, 1, 0]

#odom --> vins_world
odom_to_vins_w_rx: 0.0
odom_to_vins_w_ry: 0.0
odom_to_vins_w_rz: 0.0
odom_to_vins_w_tx: -0.05
odom_to_vins_w_ty: 0.0
odom_to_vins_w_tz: -0.055
#3.1415926535897

# lidar --> vins_body(vins IMU), vins imu 系下 lidar位姿
lidar_to_vins_body_rx: 3.1415926535897
lidar_to_vins_body_ry: 0.0
lidar_to_vins_body_rz: 0.0
lidar_to_vins_body_tx: -0.05
lidar_to_vins_body_ty: 0.0
lidar_to_vins_body_tz: -0.055

# camera model
model_type: PINHOLE
camera_name: camera

# Mono camera config
image_width: 752
image_height: 480
distortion_parameters:
   k1: -0.300267420221178
   k2:  0.090544063693053
   p1:  3.330220891093334e-05
   p2:  8.989607188457415e-05
projection_parameters:
   fx: 4.313364265799752e+02
   fy: 4.327527965378035e+02
   cx: 3.548956286992647e+02
   cy: 2.325508916495161e+02
#fisheye_mask: "/config/fisheye_mask_720x540.jpg"

#imu parameters       The more accurate parameters you provide, the worse performance
acc_n: 6.0e-2          # accelerometer measurement noise standard deviation.
gyr_n: 5.0e-3          # gyroscope measurement noise standard deviation.
acc_w: 8.0e-5        # accelerometer bias random work noise standard deviation.
gyr_w: 3.0e-6       # gyroscope bias random work noise standard deviation.
g_norm: 9.805       #

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [-0.01916508, -0.01496218,  0.99970437,
          -0.99974371,  -0.01176483,  -0.01934191,
          0.01205075,  -0.99981884,  -0.01473287]

#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [ 0.00519443, 0.1347802, 0.01465067 ]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 20                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#line feature tracker parameters
line_image_resize: 1         # use larger image size
line_image_width: 820
line_image_height: 500

#optimization parameters
max_solver_time: 0.035   # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0  # keyframe selection threshold (pixel)

#unsynchronization parameters
estimate_td: 0           # online estimate time offset between camera and imu
td: 0                    # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0       # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0    # unit: s. rolling shutter read out time per frame (from data sheet). 

#loop closure parameters
loop_closure: 1                    # start loop closure
skip_time: 0.0
skip_dist: 0.0
debug_image: 0                      # save raw image in loop detector for visualization prupose; you can close this function by setting 0 
match_image_scale: 0.5
vocabulary_file: "/config/brief_k10L6.bin"
brief_pattern_file: "/config/brief_pattern.yml"